[package]
name = "pragma-common"
version = "0.1.14"
edition = "2021"
rust-version = "1.86"
categories = ["finance", "api-bindings"]
description = "Pragma Common types for Rust"
authors = ["Pragma <support@pragma.build>"]
keywords = ["pragma", "common", "utils"]
repository = "https://github.com/astraly-labs/pragma-common"
license = "MIT"

[features]
serde = ["dep:serde"]
capnp = ["dep:capnp"]
utoipa = ["dep:utoipa"]
telemetry = [
  "dep:tracing",
  "dep:opentelemetry",
  "dep:opentelemetry_sdk",
  "dep:opentelemetry-otlp",
  "dep:opentelemetry-semantic-conventions",
  "dep:opentelemetry-appender-tracing",
  "dep:tracing-subscriber",
  "dep:tracing-opentelemetry",
]

[build-dependencies]
capnpc = { version = "0.21.0" }

[dependencies]
anyhow = "1.0.91"
bigdecimal = "0.4.8"
thiserror = "2.0.12"

# services
async-trait = "0.1"
futures = "0.3"
tokio = { version = "^1.43.0", features = ["rt", "macros", "time"]}
tokio-util = "0.7.13"

# feature[serde]
serde = { version = "1.0", features = ["derive"], optional = true }

# feature[capnp]
capnp = { version = "0.21.0", optional = true }

# feature[utoipa]
utoipa = { version = "5.0.0", features = [
  "axum_extras",
  "chrono",
  "uuid",
], optional = true }

# feature[telemetry]
tracing = { version = "0.1", optional = true }
opentelemetry = { version = "0.26.0", features = [
  "metrics",
  "logs",
], optional = true }
opentelemetry_sdk = { version = "0.26.0", features = [
  "rt-tokio",
  "logs",
], optional = true }
opentelemetry-otlp = { version = "0.26.0", features = [
  "tonic",
  "metrics",
  "logs",
], optional = true }
opentelemetry-semantic-conventions = { version = "0.26.0", optional = true }
opentelemetry-appender-tracing = { version = "0.26.0", default-features = false, optional = true }
tracing-subscriber = { version = "0.3.18", features = [
  "env-filter",
  "registry",
  "std",
], optional = true }
tracing-opentelemetry = { version = "0.27.0", optional = true }
